lecture 01:
- how to solve problems with functions, variables, conditionals, loops
- how (not) to solve problems
- Source code --converter (compiler)--> Machine Code

visual studio on cloud:
- GUI (Graphical Line Interface), CLI (Command Line Interface)

C :
- line based
- code hello.c (filename.c) - to create the c file
- make hello (make filename) - to compile the file from source code to machine code
- ./hello - to get the output of the written code
- from scratch to c. how is the functions, arguments, side effects or outputs in c depending in what I learned on scratch
- escape sequences
> \n - end of line
(to print \n, put another \ like \\n)
> printf is living in the file called stdio.h
stdio.h will teach the compiler how print things to the screen.
- #inlcude tell the compiler to find the file called standardio.h and kinda copy paste it there, so the compiler know about printf and all the functions stored in stdio.h
- stdio.h is called a header file and it represents a library
- header file: file ending with .h
- library: a code that someone else wrote that I can use
ALL ABOUT LIBRARY - manual.cs50.io

- cs50.h library:
int → whole numbers
float → decimal numbers (less precision)
double → decimal numbers (more precision)
char → single character
long → bigger integer
string (char array) → text/word
bool - true or false, 1 or 0, yes or no

- most used format specifier in c:
%d or %i - Integer (int)
%f - Float (decimal)
%lf - Double
%c - Character (char)
%ld or %li - Long integer (long)
%s - String (char[])

23/08/2025
- conditionals: if, if else, if else if else if, if there is total of 3 possibility then if else if else (cause there is only one other obvious way)

- variables: int counter = 0; (what type of variable name of the variable = the int type variable)

increase the values of variables:
counter = counter + 1;
counter += 1;
counter ++;
(all 3 are same)
counter --;

- loops:
while loops: while (a Boolean) - instead of yes or no answer, how many times the loop continues it depends on the Boolean value. after the first loop is done the loop starts again while the till the Boolean is true.

for loops: same as while loop but it saves keystroke. Need to memorize the order in which it works

forever: while (true)

do while loop: things I wanna do once and more times there after.
do while loop: in my exercise: we ask the user to one type of input, until the user input is correct the code is gonna ask for an answer over and over. meaning do the following while this Boolean expression is true.

- functions:
own made functions void meow(void): no return value, takes no input, no arguments

but, void meow(int n) [meow gonna print n times, cause this time the meow function is taking int type input]
when doing this, I need to put the for loop inside the meow function and just call meow(how many time) inside main function

- scope: the context in which the variables exists

int add(int a, int b) -- the first int on the left means it has a return value that is int, the 2nd and 3rd int means this function add takes two input, the first as an int and the second as an int.

Linux:
GUI:
CLI: commonly used:
cd → Change the current working directory.
cp → Copy files or directories.
ls → List files and directories in the current folder
mkdir → Create a new directory (folder).
mv → Move or rename files or directories.
rm → Remove (delete) files.
rmdir → Remove an empty directory.

- Constants: if I type cons int x = 20, after I made this change in my code I can't changer x's value in any other place in my code

do while loop explained here, but noted above in the loop section.

- Integer Overflow
- Truncation: dividing int with an int and getting output 0 not a float number (the ouput will always be an int no matter what). solution convert int to float (called type casting) example file name calc2.c
- floating point imprecision: limitations, can't possibly represents the exact number like 1/3 is not 0.333 all 3.
